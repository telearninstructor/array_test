// 自動產生的程式碼。請勿編輯。
namespace myTiles {
    //% fixedInstance jres blockIdentity=images._tile
    export const transparency16 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile1 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile2 = image.ofBuffer(hex``);

    helpers._registerFactory("tilemap", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "層級1":
            case "層級1":return tiles.createTilemap(hex``, img`
2222222222222222222222222
2.......................2
2..2222222222.2...22222.2
2..2........2.2...2.....2
2..2..........2...2.....2
2..2........2.2...2.....2
2.22222222222222222222222
2.......................2
2.22222222222.222222222.2
2.2.........2.2.......2.2
2.2.........2.2.......2.2
2.2.........2.2..2....2.2
2.2.........2.2..2....2.2
2.2..22222222.2..222222.2
2.2..2........2.........2
2.2..2........2..22222222
2.2..2..2222222..2......2
2.2..2..2........2..222.2
2.2..2..2........2..2...2
2....2..2..2222222..2...2
2.2..2..2..2........2...2
2.2..2..2..2........2...2
2.2..2..2..2222222222...2
2.2..2..2...............2
2.22222222222222222222222
`, [myTiles.transparency16,sprites.castle.tileGrass1,sprites.builtin.forestTiles0,sprites.castle.tilePath5,sprites.dungeon.chestClosed,myTiles.tile1], TileScale.Sixteen);
            case "層級2":
            case "層級2":return tiles.createTilemap(hex`1000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000`, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
        }
        return null;
    })

    helpers._registerFactory("tile", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "transparency16":return transparency16;
            case "myTile":
            case "tile1":return tile1;
            case "myTile0":
            case "tile2":return tile2;
        }
        return null;
    })

}
// 自動產生的程式碼。請勿編輯。
